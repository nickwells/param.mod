common.params-completion [ 2 parameters, all hidden ]
    These are the parameters for creating shell completion functions. You can
    specify where the completion files should be written, trigger the generation
    of the files and control whether they should be overwritten.
    
    Parameters in this group may also be set in the configuration file:
    /home/ngw/.config/github.com/nickwells/param.mod/v4/param/phelp/group-common.params-completion.cfg

      [-completions-zsh-dir=...]
            which directory should a zsh completions function for this program
            be written to. The directory should be in the list of directories
            given in the fpath shell variable. See the zsh manual for more
            details.
            Allowed values: a pathname. The filesystem object must exist and
                            must satisfy further checks
            Initial value:
      [-completions-zsh-make=...]
            how to create the zsh completions file. This specifies whether or if
            the file should be created. If it is set to any value other than
            'none' then the program will exit after the parameters are
            processed.
            
            This parameter may only be given on the command line, not in the
            configuration files for this group
            Allowed values: a string
                            The value must be one of the following:
                            new    : only generate the zsh completions file if
                                it doesn't already exist. Any pre-existing file
                                is protected and an error will be reported. The
                                zsh completions directory name must be
                                specified.
                            none   : do nothing.
                            replace: any existing zsh completions file for the
                                program will be overwritten or a new file will
                                be generated. The zsh completions directory name
                                must be specified.
                            show   : don't generate the zsh completions file.
                                The file that would have been generated is
                                instead printed to standard output.
            Initial value: none
---------------
common.params-help [ 12 parameters, 11 hidden ]
    These are parameters for printing a usage message.

      [-help] or [-usage]
            print a help message explaining what the program does and the
            available parameters.
            
            Optional parameters are shown surrounded by square brackets
            [like-this]. Parameters which take a value are shown with a
            following '=...', this is itself bracketed if the value may be
            omitted.
            
            Parameters which are less commonly useful will not be shown. To see
            these hidden parameters use the help-full parameter.
            
            The parameters are arranged into named groups (this parameter is in
            'common.params-help') which can be selected or suppressed through
            other help parameters. Within each group the parameters are
            displayed in alphabetical order.
            
            Groups where all the parameters are hidden will not be shown. To see
            all the available parameter groups use the help-show-groups
            parameter.
            
            For a shorter help message use the help-summary parameter
            
            The program will exit after the help message is shown.
      [-help-all-short] or [-help-as] or [-help-sa]
            print a summarised help message giving all the valid parameters.
            This is the equivalent of giving both the help-full and the
            help-summary parameters.
            
            The program will exit after the help message is shown.
      [-help-full] or [-help-a] or [-help-all] or [-help-show-all] or
         [-help-show-hidden]
            show all the parameters when printing the help message. Parameters,
            including this one, which would not normally be shown as part of the
            help message will be printed.
            
            The program will exit after the help message is shown.
      [-help-groups-in-list=...] or [-help-groups-in=...]
            when printing the help message only show help for parameters in the
            listed groups.
            
            The program will exit after the help message is shown.
            Allowed values: a list of string values separated by ',' subject to
                            checks
            Initial value:
      [-help-groups-not-in-list=...] or [-help-groups-not-in=...]
            when printing the help message don't show help for parameters in the
            listed groups.
            
            The program will exit after the help message is shown.
            Allowed values: (see parameter: help-groups-in-list)
            Initial value:
      [-help-show-desc] or [-help-show-prog-desc] or [-help-prog-desc] or
         [-help-program-description]
            when printing the help message only show the program description
            
            The program will exit after the help message is shown.
      [-help-show-examples] or [-help-examples] or [-help-eg]
            when printing the help message only show the examples, if any.
            
            The program will exit after the help message is shown.
      [-help-show-groups] or [-help-groups]
            print the parameter groups that have been set up. Do not show the
            individual parameters in those groups.
            
            This lets you see just the available groups of parameters and choose
            which you want to select for closer examination.
            
            The program will exit after the help message is shown.
      [-help-show-params=...] or [-help-p=...] or [-help-params=...]
            when printing the help message only show help for the listed
            parameters
            
            The program will exit after the help message is shown.
            Allowed values: a list of string values separated by ','
            Initial value:
      [-help-show-references] or [-help-show-refs] or [-help-refs] or
         [-help-see-also]
            when printing the help message only show the references (the See
            Also section), if any.
            
            The program will exit after the help message is shown.
      [-help-show-sources] or [-help-param-sources]
            when printing the help message only show the places (other than the
            command line) where parameters may be set. This will list any
            configuration files and environment prefixes.
            
            The program will exit after the help message is shown.
      [-help-summary] or [-help-s] or [-help-short]
            print a summary of the help message. Whether the hidden parameters
            are shown is determined by the help-full parameter. To see all the
            parameters (including hidden ones) in a summarised form you will
            need to give both this parameter and the help-full parameter.
            
            The program will exit after the help message is shown.
---------------
common.params-params [ 6 parameters, all hidden ]
    These are the parameter-handling parameters. There are parameters for
    showing where parameters have been set and for the handling of parameter
    errors.

      [-params-dont-exit-on-errors[=...]]
            if errors are detected when processing the parameters the program
            will exit unless this flag is set to true. Note that the behaviour
            of the program cannot be guaranteed if this option is chosen and it
            should only be used in extreme circumstances
            Allowed values: none (which will be taken as 'true') or some value
                            that can be interpreted as true or false. The value
                            must be given after an '=', not as a following
                            value, as this is optional
            Initial value: true
      [-params-dont-show-errors[=...]]
            after all the parameters are set any errors detected will be
            reported unless this flag is set to true
            Allowed values: (see parameter: params-dont-exit-on-errors)
            Initial value: false
      [-params-exit-after-parsing[=...]]
            exit after the parameters have been read and processed. This lets
            you check the parameters are valid and see what values get set
            without actually running the program.
            
            Note that the program may perform some operations as the parameters
            are processed and these will still take place even if this parameter
            is set.
            Allowed values: (see parameter: params-dont-exit-on-errors)
            Initial value: false
      [-params-file=...] or [-params-from=...]
            read in parameters from the given file. Note that the parameter file
            will be read as a configuration file with each parameter on a
            separate line. Comments, white space etc. will be treated as in any
            other configuration file
            Allowed values: a pathname to a file which must exist, containing
                            configuration parameters
            Initial value: none
      [-params-show-unused[=...]]
            after all the parameters are set a message will be printed showing
            any parameters (including those from configuration files or the
            environment) which were not recognised.
            
            Parameters set in configuration files or through environment
            variables may be intended for other programs and so unused values
            are not classed as errors. Command line options are obviously
            intended for this program and so any command line parameter which is
            not recognised is treated as an error. Setting this parameter will
            let you check for spelling mistakes in parameters that you've set in
            your alternative sources.
            
            The program will exit after the parameters are processed.
            Allowed values: (see parameter: params-dont-exit-on-errors)
            Initial value: false
      [-params-show-where-set[=...]]
            after all the parameters are set a message will be printed showing
            where they were set. This can be useful for debugging (especially if
            there are several config files in use).
            
            The program will exit after the parameters are processed.
            Allowed values: (see parameter: params-dont-exit-on-errors)
            Initial value: false
