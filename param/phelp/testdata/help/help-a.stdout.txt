PROGRAM NAME UNKNOWN
a description of what the program does (help-a)

===============

Usage: PROGRAM NAME UNKNOWN -param2=... ...

===============

common.params-completion [ 2 parameters, all hidden ]
    These are the parameters for creating shell completion functions. You can
    specify where the completion files should be written, trigger the generation
    of the files and control whether they should be overwritten.

    Parameters in this group may also be set in the configuration file:
    /home/ngw/.config/github.com/nickwells/param.mod/v5/param/phelp/group-common.params-completion.cfg

      [-completions-zsh-dir=...]
            which directory should a zsh completions function for this program
            be written to. The directory should be in the list of directories
            given in the fpath shell variable. See the zsh manual for more
            details.
            Allowed values: a pathname. The filesystem object must exist and
                            must satisfy further checks
            Initial value:
            Current value: /home/ngw/.oh-my-zsh/custom/plugins
      [-completions-zsh-make=...]
            how to create the zsh completions file. This specifies whether or if
            the file should be created. If it is set to any value other than
            'none' then the program will exit after the parameters are
            processed.

            This parameter may only be given on the command line, not in the
            configuration files for this group
            Allowed values: a string
                            The value must be one of the following:
                            new    : only generate the zsh completions file if
                                it doesn't already exist. Any pre-existing file
                                is protected and an error will be reported. The
                                zsh completions directory name must be
                                specified.
                            none   : do nothing.
                            replace: any existing zsh completions file for the
                                program will be overwritten or a new file will
                                be generated. The zsh completions directory name
                                must be specified.
                            show   : don't generate the zsh completions file.
                                The file that would have been generated is
                                instead printed to standard output.
            Initial value: none
---------------
common.params-help       [ 10 parameters, 9 hidden ]
    These are parameters for printing a help message.

      [-help] or [-usage]
            print this help message and exit.

            To see hidden parameters use the -help-all parameter.
            For a brief help message use the -help-summary parameter
            For the full help message use the -help-full parameter
      [-help-all] or [-help-a]
            show all the parameters. Less commonly useful parameters are not
            shown in the standard help message. This will reveal them.

            The program will exit after the help message is shown.
      [-help-all-short] or [-help-as] or [-help-sa]
            print a shorter help message but with all the parameters shown. This
            is the equivalent of giving both the help-all and the help-summary
            parameters.

            The program will exit after the help message is shown.
      [-help-format=...]
            specify how the help message should be produced. Only some parts of
            the help message support this feature. They will mostly produce
            Standard format regardless of this setting.
            Allowed values: a string
                            The value must be one of the following:
                            markdown: markdown format. This will have markdown
                                annotations applied. This can be useful to
                                produce online documentation
                            standard: the standard format. This is almost
                                certainly what you want
            Initial value: standard
      [-help-full]
            show all parts of the help message and all parameters, including
            hidden ones.

            The program will exit after the help message is shown.
      [-help-groups=...] or [-help-group=...] or [-help-g=...]
            when printing the help message only show the listed groups.

            The program will exit after the help message is shown.
            Allowed values: a list of string values separated by ',' subject to
                            checks
            Initial value:
      [-help-notes=...] or [-help-note=...] or [-help-n=...]
            when printing the help message only show the listed notes.

            The program will exit after the help message is shown.
            Allowed values: (see parameter: help-groups)
            Initial value:
      [-help-params=...] or [-help-param=...] or [-help-p=...]
            when printing the help message only show the listed parameters.

            The program will exit after the help message is shown.
            Allowed values: (see parameter: help-groups)
            Initial value:
      [-help-show=...]
            specify the parts of the help message you wish to see
            Allowed values: a list of string values separated by ','.

                            Each value can be set to false by following the
                            value with '=false'; by default the value will be
                            set to true.
                            The value must be one of the following:
                            examples      : examples of correct program use and
                                suggestions of ways to use the program
                            grouped-params: the named parameters by group name
                            groups        : the parameter groups
                            intro         : the program name and optionally the
                                program description
                            named-params  : the named parameters (flags)
                            notes         : additional notes on the program
                                behaviour
                            pos-params    : the positional parameters coming
                                just after the program name
                            refs          : references to other programs or
                                further sources of information
                            sources       : any additional sources of parameter
                                values such as environment variables or
                                configuration files
                            usage         : the program name, a parameter
                                summary, and any trailing parameters
                            The following aliases are available:
                            all   : intro, usage, pos-params, grouped-params,
                                notes, sources, examples, refs
                            params: pos-params, grouped-params
                            std   : intro, usage, pos-params, grouped-params
            Initial value:
            Current value: grouped-params=true
                           intro=true
                           pos-params=true
                           usage=true
      [-help-summary] or [-help-s] or [-help-short]
            print a shorter help message. Only minimal details are show,
            descriptions are not shown.

            The program will exit after the help message is shown.
---------------
common.params-params     [ 6 parameters, all hidden ]
    These are the parameter-handling parameters. There are parameters for
    showing where parameters have been set and for the handling of parameter
    errors.

      [-params-dont-exit-on-errors[=...]]
            if errors are detected when processing the parameters the program
            will exit unless this flag is set to true. Note that the behaviour
            of the program cannot be guaranteed if this option is chosen and it
            should only be used in emergencies
            Allowed values: none (which will be taken as 'true') or some value
                            that can be interpreted as true or false. The value
                            must be given after an '=', not as a following
                            value, as this is optional
            Initial value: true
      [-params-dont-show-errors[=...]]
            after all the parameters are set any errors detected will be
            reported unless this flag is set
            Allowed values: (see parameter: params-dont-exit-on-errors)
            Initial value: false
      [-params-exit-after-parsing[=...]]
            exit after the parameters have been read and processed. This lets
            you check the parameters are valid and see what values get set
            without actually running the program.

            Note that the program may perform some operations as the parameters
            are processed and these will still take place even if this parameter
            is set.
            Allowed values: (see parameter: params-dont-exit-on-errors)
            Initial value: false
      [-params-file=...] or [-params-from=...]
            read in parameters from the given file. Note that the parameter file
            will be read as a configuration file with each parameter on a
            separate line. Comments, white space etc. will be treated as in any
            other configuration file
            Allowed values: a pathname to a file which must exist, containing
                            configuration parameters
            Initial value: none
      [-params-show-unused[=...]]
            after all the parameters are set a message will be printed showing
            any parameters (including those from configuration files or the
            environment) which were not recognised.

            Parameters set in configuration files or through environment
            variables may be intended for other programs and so unused values
            are not classed as errors. Command line options are obviously
            intended for this program and so any command line parameter which is
            not recognised is treated as an error. Setting this parameter will
            let you check for spelling mistakes in parameters that you've set in
            your alternative sources.

            The program will exit after the parameters are processed.
            Allowed values: (see parameter: params-dont-exit-on-errors)
            Initial value: false
      [-params-show-where-set[=...]]
            after all the parameters are set a message will be printed showing
            where they were set. This can be useful for debugging (especially if
            there are several config files in use).

            The program will exit after the parameters are processed.
            Allowed values: (see parameter: params-dont-exit-on-errors)
            Initial value: false
---------------
test-group1              [ 6 parameters, 1 hidden ]
    test parameters.

      [-param1=...] or [-param1-alt1=...]
            help text for param1
            Allowed values: any value that can be read as a whole number
            Initial value: 1
      -param2=... or -param2-alt2=...
            help text for param2.
            With an embedded new line and a lot of text to demonstrate the
            behaviour when text is wrapped across multiple lines
            Allowed values: any value that can be read as a whole number
            Initial value: 2
            Current value: 99
      [-param3=...] or [-p3=...]
            help...
            Allowed values: any value that can be read as a number with a
                            decimal place
            Initial value: 3.333
      [-param4[=...]]
            help...

            This parameter value may only be set once. Any appearances after the
            first will not be used
            Allowed values: (see parameter: params-dont-exit-on-errors)
            Initial value: false
      [-param5=...]
            help...
            Allowed values: a string
                            The value must be one of the following:
                            v1: a value
                            v2: another value
            Initial value: v1
      [-param6=...]
            help...
            Allowed values: (see parameter: param5)
            Initial value: v2
