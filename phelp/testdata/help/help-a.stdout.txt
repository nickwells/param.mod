PROGRAM NAME UNKNOWN
a description of what the program does (help-a)

===============

Usage: PROGRAM NAME UNKNOWN -param2=int ...

===============

stdParams-cmpl   [ 3 parameters ]
    These are the parameters for creating shell completion functions. You can
    specify where the completion files should be written, trigger the generation
    of the files and control whether they should be overwritten.

    Parameters in this group may also be set in the configuration file:
    testdata/.config/github.com/nickwells/param.mod/v6/phelp/group-stdParams-cmpl.cfg

      [-completions-quiet[=Bool] ]
            suppress any messages produced after generating or updating the
            completions file.
            Allowed values: none (which will be taken as 'true') or some value
                            that can be interpreted as true or false. The value
                            must be given after an '=', not as a following
                            value, as this is optional
      [-completions-zsh-dir=Pathname]
            which directory should a zsh completions function for this program
            be written to. The directory should be in the list of directories
            given in the fpath shell variable. See the zsh manual for more
            details.
            Allowed values: a pathname. The filesystem object must exist and
                            must satisfy further checks
      [-completions-zsh-make=none|new|replace|...]
            how to create the zsh completions file. This specifies whether or if
            the file should be created. If it is set to any value other than
            'none' then the program will exit after the parameters are
            processed.

            This parameter may only be given on the command line, not in the
            configuration files for this group
            See also: completions-zsh-dir
            Allowed values: a string
                            The value must be one of the following:
                               new    : only generate the zsh completions file
                                  if it doesn't already exist. Any pre-existing
                                  file is protected and an error will be
                                  reported. The zsh completions directory name
                                  must be specified.
                               none   : do nothing.
                               replace: any existing zsh completions file for
                                  the program will be overwritten or a new file
                                  will be generated. The zsh completions
                                  directory name must be specified.
                               show   : don't generate the zsh completions file.
                                  The file that would have been generated is
                                  instead printed to standard output.
            Initial value: none
---------------
stdParams-help   [ 12 parameters ]
    These are parameters for printing a help message.

      [-help, -usage]
            print this help message and exit.

            To see hidden parameters use the -help-all parameter.
            For a brief help message use the -help-summary parameter
            For the full help message use the -help-full parameter
      [-help-all, -help-a]
            show all the parameters. Less commonly useful parameters are not
            shown in the standard help message. This will reveal them.

            The program will exit after the help message is shown.
      [-help-all-short, -help-as, -help-sa]
            print a shorter help message but with all the parameters shown. This
            is the equivalent of giving both the help-all and the help-summary
            parameters.

            The program will exit after the help message is shown.
      [-help-format=standard|markdown]
            specify how the help message should be produced. Only some parts of
            the help message support this feature. They will mostly produce
            Standard format regardless of this setting.
            Allowed values: a string
                            The value must be one of the following:
                               markdown: markdown format. This will have
                                  markdown annotations applied. This can be
                                  useful to produce online documentation
                               standard: the standard format. This is almost
                                  certainly what you want
            Initial value: standard
      [-help-full, -help-f]
            show all parts of the help message and all parameters, including
            hidden ones.

            The program will exit after the help message is shown.
      [-help-groups=group-name,..., -help-group=group-name,...,
         -help-g=group-name,...]
            when printing the help message only show the listed groups. This
            will also force hidden parameters to be shown.

            The program will exit after the help message is shown.
            Allowed values: a list of string values separated by ',' subject to
                            checks
      [-help-no-page[=Bool] , -help-dont-page[=Bool] , -help-no-pager[=Bool] ]
            show help but don't page the output. Without this parameter the help
            message will be paged using the standard pager (as given by the
            value of the 'PAGER' environment variable or 'less' if 'PAGER' is
            not set or the command it refers to cannot be found)
            Allowed values: (see parameter: completions-quiet)
      [-help-notes=note-name,..., -help-note=note-name,...,
         -help-n=note-name,...]
            when printing the help message only show the listed notes.

            The program will exit after the help message is shown.
            Allowed values: (see parameter: help-groups)
      [-help-params=param-name,..., -help-param=param-name,...,
         -help-p=param-name,...]
            when printing the help message only show the listed parameters.

            The program will exit after the help message is shown.
            Allowed values: (see parameter: help-groups)
      [-help-show=part,...]
            specify the parts of the help message you wish to see
            Allowed values: a list of string values separated by ','.

                            Each value can be set to false by following the
                            value with '=false'; by default the value will be
                            set to true.
                            The value must be one of the following:
                               examples      : examples of correct program use
                                  and suggestions of ways to use the program
                               groups        : the parameter groups
                               intro         : the program name and optionally
                                  the program description
                               notes         : additional notes on the program
                                  behaviour
                               params-grouped: the named parameters by group
                                  name
                               params-named  : the named parameters (flags)
                               params-pos    : the positional parameters coming
                                  just after the program name
                               refs          : references to other programs or
                                  further sources of information
                               sources       : any additional sources of
                                  parameter values such as environment variables
                                  or configuration files
                               usage         : the program name, a parameter
                                  summary, and any trailing parameters
                            The following aliases are available:
                               all           : intro, usage, params-pos,
                                  params-grouped, notes, sources, examples, refs
                               eg            : examples
                               example       : examples
                               group         : groups
                               grouped-params: params-grouped
                               grp           : groups
                               named-params  : params-named
                               params        : params-pos, params-grouped
                               pos-params    : params-pos
                               ref           : refs
                               see-also      : refs
                               std           : intro, usage, params-pos,
                                  params-grouped
            Initial value:
            Current value: intro=true
                           params-grouped=true
                           params-pos=true
                           usage=true
      [-help-summary, -help-s, -help-short]
            print a shorter help message. Only minimal details are shown,
            descriptions are not shown.

            The program will exit after the help message is shown.
      [-help-width=int]
            when showing help wrap the output to the width given here.

            Note that some shells will set the COLUMNS variable to the width of
            the current terminal. You can pass this as the value to get a
            full-width help message.
            Allowed values: any value that can be read as a whole number subject
                            to checks
            Initial value: 80
---------------
stdParams-params [ 7 parameters ]
    These are the parameter-handling parameters. There are parameters for
    showing where parameters have been set and for the handling of parameter
    errors.

      [-params-dont-exit-on-errors[=Bool] ]
            if errors are detected when processing the parameters the program
            will exit unless this flag is set to true. Note that the behaviour
            of the program cannot be guaranteed if this option is chosen and it
            should only be used in emergencies
            Allowed values: (see parameter: completions-quiet)
            Initial value: true
      [-params-dont-show-errors[=Bool] ]
            after all the parameters are set any errors detected will be
            reported unless this flag is set
            Allowed values: (see parameter: completions-quiet)
      [-params-exit-after-parsing[=Bool] ]
            exit after the parameters have been read and processed. This lets
            you check the parameters are valid and see what values get set
            without actually running the program.

            Note that the program may perform some operations as the parameters
            are processed and these will still take place even if this parameter
            is set.
            Allowed values: (see parameter: completions-quiet)
      [-params-file=filename, -params-from=filename, -params-f=filename]
            read in parameters from the given file. Note that the parameter file
            will be read as a configuration file with each parameter on a
            separate line. Comments, white space etc. will be treated as in any
            other configuration file
            Allowed values: a pathname to a file which must exist, containing
                            configuration parameters
            Initial value: none
      [-params-show-unused[=Bool] ]
            after all the parameters are set a message will be printed showing
            any parameters (including those from configuration files or the
            environment) which were not recognised.

            Parameters set in configuration files or through environment
            variables may be intended for other programs and so unused values
            are not classed as errors. Command line options are obviously
            intended for this program and so any command line parameter which is
            not recognised is treated as an error. Setting this parameter will
            let you check for spelling mistakes in parameters that you've set in
            your alternative sources.

            The program will exit after the parameters are processed.
            Allowed values: (see parameter: completions-quiet)
      [-params-show-where-set[=Bool] ]
            after all the parameters are set a message will be printed showing
            where they were set. This can be useful for debugging (especially if
            there are several config files in use).

            The program will exit after the parameters are processed.
            See also: params-where-set-fmt
            Allowed values: (see parameter: completions-quiet)
      [-params-where-set-fmt=std|short|table]
            after all the parameters are set a message will be printed showing
            where they were set. This parameter controls how this information is
            shown.

            The program will exit after the parameters are processed.
            See also: params-show-where-set
            Allowed values: a string
                            The value must be one of the following:
                               short: a short form of the information and only
                                  showing values that have been set
                               std  : the standard format for showing where and
                                  if parameters are set
                               table: the information on where parameters are
                                  set in a tabular format. Only values that have
                                  been set are shown
            Initial value: std
---------------
test-group1      [ 6 parameters ]
    test parameters.

      [-param1=int, -param1-alt1=int]
            help text for param1
            Allowed values: any value that can be read as a whole number
            Initial value: 1
      -param2=int, -param2-alt2=int
            help text for param2.
            With an embedded new line and a lot of text to demonstrate the
            behaviour when text is wrapped across multiple lines
            Allowed values: any value that can be read as a whole number
            Initial value: 2
            Current value: 99
      [-param3=float, -p3=float]
            help...
            Allowed values: any value that can be read as a number with a
                            decimal place
            Initial value: 3.333
      [-param4[=Bool] ]
            help...

            This parameter value may only be set once. Any appearances after the
            first will not be used
            Allowed values: (see parameter: completions-quiet)
      [-param5=v1|v2]
            help...
            Allowed values: a string
                            The value must be one of the following:
                               v1: a value
                               v2: another value
            Initial value: v1
      [-param6=v2|v1]
            help...
            Allowed values: (see parameter: param5)
            Initial value: v2
